###################
# BUILD FOR LOCAL DEVELOPMENT
###################

FROM node:22-alpine3.18 AS development

# Create app directory
WORKDIR /usr/src/app

# Copy application dependency manifests to the container image.
COPY --chown=node:node package*.json ./

# Install app dependencies using the `npm ci` command instead of `npm install`
RUN npm ci

# Bundle app source
COPY --chown=node:node . .

# Use the node user from the image (instead of the root user)
USER node

###################
# BUILD FOR PRODUCTION
###################

FROM node:22-alpine3.18 AS build

WORKDIR /usr/src/app

COPY --chown=node:node package*.json ./

# Copy node_modules from the development stage
COPY --chown=node:node --from=development /usr/src/app/node_modules ./node_modules

COPY --chown=node:node . .

# Copy Prisma schema files
COPY --chown=node:node ./prisma ./prisma

RUN npm run prisma:generate

# Run the build command which creates the production bundle
RUN npm run build

# Optimize node_modules by installing only production dependencies
RUN npm ci --only=production && npm cache clean --force

USER node

###################
# PRODUCTION
###################

FROM node:22-alpine3.18 AS production

# Set working directory
WORKDIR /usr/src/app

# Copy necessary files from the build stage
COPY --chown=node:node --from=build /usr/src/app/node_modules ./node_modules
COPY --chown=node:node --from=build /usr/src/app/dist ./dist
COPY --chown=node:node --from=build /usr/src/app/prisma ./prisma
COPY --chown=node:node --from=build /usr/src/app/package.json ./package.json

# Run Prisma migrations before starting the server
CMD ["sh", "-c", "npx prisma migrate deploy && node dist/main.js"]
