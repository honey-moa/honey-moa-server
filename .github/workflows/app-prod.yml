name: app-prod

on:
  push:
    branches: [main]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  CODE_DEPLOY_APPLICATION_NAME: ${{ secrets.CODE_DEPLOY_APPLICATION_NAME }}
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: ${{ secrets.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: CHECK OUT
        uses: actions/checkout@v4

      - name: APP API CHANGE CHECK FOR DEPLOY
        uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            src/**
          FILES: |
            Dockerfile

      - name: Configure AWS credentials
        if: env.GIT_DIFF
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        if: env.GIT_DIFF
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1

      - name: Build, tag, and push image to Amazon ECR
        if: env.GIT_DIFF
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REGISTRY_ALIAS: ${{ secrets.ECR_REGISTRY_ALIAS }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ secrets.IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Upload to S3
        if: env.GIT_DIFF
        run: |
          aws ssm get-parameters --name "app-prod-env" --with-decrypt | jq -r ".Parameters[0].Value" > .env

          aws ssm get-parameters --name "appspec-app-prod" --with-decrypt | jq -r ".Parameters[0].Value" > appspec.yml

          mkdir scripts

          aws ssm get-parameters --name "afterInstall-app-prod" --with-decrypt | jq -r ".Parameters[0].Value" > ./scripts/afterInstall.sh

          aws ssm get-parameters --name "app-prod-docker-compose" --with-decrypt | jq -r ".Parameters[0].Value" > docker-compose.yaml

          zip -r ./$GITHUB_SHA.zip ./scripts appspec.yml docker-compose.yaml .env
          aws s3 cp --region $AWS_REGION ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME

      - name: Deploy to EC2 with CodeDeploy
        if: env.GIT_DIFF
        run: |
          aws deploy create-deployment \
          --application-name $CODE_DEPLOY_APPLICATION_NAME \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name $CODE_DEPLOY_DEPLOYMENT_GROUP_NAME \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
